{"version":3,"sources":["hooks/AuthContext.jsx","components/Login.jsx","components/Signup.jsx","components/Navbar/AdminNavs.jsx","components/Navbar/LoginUtil.jsx","components/Navbar/UserNavs.jsx","components/Navbar/MyNav.jsx","components/Poster/Poster.jsx","hooks/CPContext.jsx","components/CoursePlanner/Timetable.jsx","components/CoursePlanner/CourseList/CourseItem.jsx","components/CoursePlanner/CourseList/CourseList.jsx","components/Loading/Loading.jsx","components/CoursePlanner/AddCourse/SearchItem.jsx","components/CoursePlanner/AddCourse/ListCourses.jsx","components/CoursePlanner/CourseList/Clashes.jsx","components/CoursePlanner/Courseplanner.jsx","components/App/UserRoute.jsx","components/CourseAdd/ClassList/ListItem.jsx","components/CourseAdd/ClassList/ClassList.jsx","components/CourseAdd/ClassList/AddClassForm.jsx","components/CourseAdd/CourseAdd.jsx","components/NoAccess.jsx","components/App/AdminRoute.jsx","components/Posts/Post.jsx","components/Posts/PostForm.jsx","components/Posts/Posts.jsx","components/App/App.jsx","index.js"],"names":["server","axios","create","baseURL","process","withCredentials","AuthContext","createContext","AuthProvider","children","auth","useState","user","setUser","userSet","setUserSet","location","useLocation","history","useHistory","checkauth","get","then","res","data","isAuth","catch","err","console","log","login","username","password","setShowAlert","from","state","pathname","post","push","logout","register","fname","lname","email","usernameExists","Promise","resolve","reject","a","response","useProvideAuth","Provider","value","useAuth","useContext","Login","showAlert","schema","yup","shape","required","Container","Row","className","Col","lg","md","validationSchema","onSubmit","values","initialValues","handleSubmit","handleChange","handleBlur","touched","isValid","errors","dirty","Form","noValidate","Alert","variant","show","onClose","dismissible","Group","controlId","FloatingLabel","label","Control","type","name","onChange","onBlur","isInvalid","Feedback","Button","disabled","Signup","test","min","confirm","oneOf","AdminNavs","role","NavDropdown","title","onSelect","eventKey","Item","LoginUtil","useEffect","Nav","align","onClick","Link","UserNavs","href","MyNav","Navbar","bg","fixed","fluid","Brand","activeKey","Poster","src","alt","sm","xs","CPContext","CPProvider","CP","courses","setCourses","schedules","setSchedules","calendars","setCalendars","clashes","setClashes","selectedCourses","setSelectedCourses","totalCredits","setTotalCredits","days","getClashes","clashes_local","i","daySchedule","filter","schedule","rawDay","j","length","cls1","k","cls2","rawStart","rawEnd","ispresent","deselectCourse","id","local","course","useProvideCP","useCP","id1","id2","templates","weekDayname","model","dayName","Timetable","props","calendar","useRef","current","getInstance","next","ref","height","taskView","isReadOnly","scheduleView","template","week","hourStart","hourEnd","randomColor","require","CourseItem","inputRef","showInfo","setShowInfo","courseInfo","setCourseInfo","getNearestDate","day","time","today","Date","diff","getDay","getFullYear","getMonth","getDate","checked","color","luminosity","seed","newCalendar","String","bgColor","borderColor","course_timetable","map","myClass","newClass","calendarId","category","dueDateClass","start","start_time","toISOString","end","end_time","parseInt","rawId","course_credit","addCourse","removeCourse","CloseButton","currCal","removeFromList","Collapse","in","course_venue","course_instructor","CourseList","handleAdd","course_name","Loading","Spinner","animation","SearchItem","selected","setSelected","init","setInit","course_code","searchRef","search","params","page","results","Text","Clashes","clash","Courseplanner","showCoursesi","setShowCoursesi","showCourseModal","setShowCourseModal","Card","Body","Badge","Modal","centered","onHide","Header","closeButton","Title","ListCourses","UserRoute","rest","render","to","ListItem","classes","setClasses","classeslocal","checkClass","ClassList","AddClassForm","setShowModal","classesLocal","Select","CourseManage","showModal","success","setSuccess","failure","setFailure","code","credits","positive","instructor","resetForm","newCourse","size","AdminRoute","months","Post","update","setUpdate","date","createdAt","author","hours","mins","getYear","getHours","getMinutes","timeStamp","content","_id","authorId","ListGroup","delete","PostForm","newPost","as","rows","Posts","posts","setPosts","loaded","setLoaded","items","setItems","pages","setPages","setPage","totalPages","number","Pagination","active","App","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb32be42.chunk.js","sourcesContent":["import { createContext, useContext, useState } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport axios from 'axios'\n\nconst server = axios.create({\n\tbaseURL: process.env.REACT_APP_SERVER_URL+'/auth',\n\twithCredentials: true\n});\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({children}) {\n\tconst auth = useProvideAuth();\n\n\treturn (\n\t\t<AuthContext.Provider value={auth}>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t)\n}\n\nexport function useAuth() {\n\treturn useContext(AuthContext)\n}\n\nfunction useProvideAuth() {\n\tconst [user, setUser] = useState();\n\tconst [userSet, setUserSet] = useState(false)\n\tconst location = useLocation();\n\tconst history = useHistory();\n\n\tfunction checkauth() {\n\t\tserver.get('/login')\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.isAuth) {\n\t\t\t\t\t// console.log('User is logged in :', res.data.user)\n\t\t\t\t\tsetUser(res.data.user);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// console.log('User is not logged in!')\n\t\t\t\t\tsetUser()\n\t\t\t\t}\n\t\t\t\tsetUserSet(true)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t}\n\n\tfunction login(username, password, setShowAlert) {\n\t\tlet { from } = location.state || { from: { pathname: \"/\" } }\n\n\t\tserver.post('/login', {\n\t\t\tusername: username, \n\t\t\tpassword: password\n\t\t})\n\t\t.then((res) => {\n\t\t\tsetUser(res.data.user);\n\t\t\thistory.push(from);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetShowAlert(true)\n\t\t})\n\t}\n\n\tfunction logout() {\n\t\tserver.post('/logout')\n\t\t\t.then(res => {\n\t\t\t\thistory.push('/')\n\t\t\t\tsetUser();\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\t}\n\n\tfunction register(fname, lname, email, username, password) {\n\t\tserver.post('/register', {\n\t\t\tfname: fname,\n\t\t\tlname: lname,\n\t\t\temail: email,\n\t\t\tusername: username, \n\t\t\tpassword: password\n\t\t})\n\t\t.then((res) => {\n\t\t\thistory.push('/login');\n\t\t})\n\t\t.catch((err) => {\n\t\t\t\n\t\t});\n\t}\n\n\tfunction usernameExists(username) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n            \tconst response = await server.post('/usernameexists', {\n                    username: username\n                })\n                if (response.data.usernameExists){\n                    resolve(false)\n                }\n                else {\n                    resolve(true)\n                }\n            } catch (error) {\n                console.log(error.response);\n            }\n\t\t})\n\t}\n\n\treturn {user, userSet, login, logout, register, checkauth, usernameExists}\n}\n","import React, { useState } from 'react';\nimport { useAuth } from '../hooks/AuthContext';\nimport { Alert, Form, Button, Container, Row, Col, FloatingLabel } from 'react-bootstrap'\nimport * as yup from 'yup'\nimport { Formik } from 'formik';\n\nexport default function Login() {\n\tconst auth = useAuth();\n\tconst [showAlert, setShowAlert] = useState(false)\n\n\tlet schema = yup.object().shape({\n\t\tusername: yup.string().required('Please enter username!'),\n\t\tpassword: yup.string().required('Please enter password!')\n\t})\n\n\tfunction login(values) {\n\t\tauth.login(values.username, values.password, setShowAlert)\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row className=\"justify-content-center my-4\">\n\t\t\t\t<Col lg=\"5\" md=\"9\">\n\t\t\t\t\t<h1 className=\"mx-5 my-4\">Login</h1>\n\t\t\t\t\t<Formik validationSchema={schema} onSubmit={login} initialValues={{username: '', password: ''}}>\n\t\t\t\t\t\t{({handleSubmit, handleChange, handleBlur, values, touched, isValid, errors, dirty}) => (\n\t\t\t\t\t\t\t<Form className=\"mx-5 my-4\" noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<Alert variant=\"danger\" show={showAlert} onClose={() => setShowAlert(false)} dismissible>Incorrect username or password!</Alert>\n\n\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t\t\t<FloatingLabel label=\"Username\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name='username' value={values.username} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.username && errors.username} />\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\"> {errors.username} </Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t\t\t<FloatingLabel label=\"Password\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" name='password' value={values.password} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.password && errors.password} />\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\"> {errors.password} </Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" disabled={!(isValid && dirty)}>\n\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t)\n}","import React from 'react';\nimport { useAuth } from '../hooks/AuthContext'\nimport { Form, Button, Container, Row, Col, FloatingLabel } from 'react-bootstrap'\nimport * as yup from 'yup'\nimport { Formik } from 'formik'\n\nexport default function Signup() {\n\tconst auth = useAuth();\n\n\tlet schema = yup.object().shape({\n\t\tfname: yup.string().required('Required!'),\n\t\tlname: yup.string().required('Required!'),\n\t\temail: yup.string().email('Not a valid email!').required('Required!'),\n\t\tusername: yup.string().required('Required!').test('username exists', 'Sorry this username is taken!', (value) => checkUsername(value)),\n\t\tpassword: yup.string().min(6, 'Password must have atleast 6 characters!').required('Required!'),\n\t\tconfirm: yup.string().oneOf([yup.ref('password'), null], 'Passwords do not match!').required('Required!')\n\t})\n\n\tfunction checkUsername(username) {\n\t\treturn auth.usernameExists(username)\n\t}\n\n\tfunction makeUser(values) {\n\t\tauth.register(values.fname, values.lname, values.email, values.username, values.password);\n\t}\n\n\treturn (\n\t<Container>\n\t\t<Row className=\"justify-content-center my-4\">\n\t\t\t<Col lg=\"5\" md=\"9\">\n\t\t\t\t<h1 className=\"mx-5 my-4\">Signup</h1>\n\t\t\t\t<Formik validationSchema={schema} onSubmit={makeUser} initialValues={{fname: '', lname: '', email: '', username: '', password: '', confirm: ''}}>\n\t\t\t\t\t{\n\t\t\t\t\t\t({handleSubmit, handleChange, handleBlur, values, touched, isValid, errors, dirty}) => (\n\t\t\t\t\t\t\t<Form className=\"mx-5 my-4\" noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t<FloatingLabel label=\"First Name\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"fname\" value={values.fname} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.fname && errors.fname}></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.fname}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t<FloatingLabel label=\"Last Name\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"lname\" value={values.lname} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.lname && !!errors.lname}></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.lname}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t<FloatingLabel label=\"Email\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" name=\"email\" value={values.email} onChange={handleChange} onBlur={handleBlur} isValid={touched.email && !errors.email} isInvalid={touched.email && errors.email}></Form.Control>\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t<FloatingLabel label=\"Username\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"username\" value={values.username} onChange={handleChange} onBlur={handleBlur} isValid={touched.username && !errors.username} isInvalid={touched.username && errors.username}/>\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t\t\t\t{errors.username}\n\t\t\t\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t<FloatingLabel label=\"Password\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" name=\"password\" value={values.password} onChange={handleChange} onBlur={handleBlur} isValid={touched.password && !errors.password} isInvalid={touched.password && errors.password}/>\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t<FloatingLabel label=\"Confirm Password\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" name=\"confirm\" value={values.confirm} onChange={handleChange} onBlur={handleBlur} isValid={touched.confirm && !errors.confirm} isInvalid={touched.confirm && errors.confirm} />\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.confirm}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t</FloatingLabel>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" disabled={!(isValid && dirty)}>\n\t\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t</Formik>\n\t\t\t</Col>\n\t\t</Row>\n\t</Container>\n\t)\n}","import React from 'react'\nimport { useAuth } from '../../hooks/AuthContext'\nimport { NavDropdown } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\n\nexport default function AdminNavs() {\n    const auth = useAuth()\n    const history = useHistory()\n    \n    function handleSelect(eventKey) {\n        history.push(eventKey)\n    }\n\n    if (auth.user) {\n        if (auth.user.role === 1 || auth.user.role === 2) {\n            return (\n                < >\n                <NavDropdown title=\"Manage Courses\" onSelect={handleSelect} >\n                    <NavDropdown.Item eventKey=\"/admin/addcourse\" >Add Courses</NavDropdown.Item>\n                </NavDropdown>\n                </>\n            )\n        }\n    }\n    return (< ></>)\n}\n","import React, { useEffect } from 'react'\nimport { Nav, NavDropdown, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\nimport { useAuth } from '../../hooks/AuthContext'\n\nexport default function LoginUtil() {\n    const auth = useAuth()\n    const history = useHistory()\n    useEffect(() => {\n        auth.checkauth()\n    }, [])\n\n    function login() {\n        history.push('/login')\n    }\n\n    function signup() {\n        history.push('/signup')\n    }\n\n    if (auth.user) {\n        return (\n            <Nav>\n                <NavDropdown align=\"end\" title={auth.user.username}>\n                    <NavDropdown.Item onClick={auth.logout}>Logout</NavDropdown.Item>\n                </NavDropdown>\n            </Nav>\n        )\n    }\n    else {\n        return(\n            <Nav>\n                <Nav.Item className=\"mx-2\" onClick={login}>\n                    <Nav.Link className=\"link-white\">Log In</Nav.Link>\n                </Nav.Item>\n                <Button className=\"mx-1\" variant=\"outline-light\" onClick={signup}>Sign Up</Button>\n            </Nav>\n        )\n    }\n}\n\n","import React from 'react'\nimport { useAuth } from '../../hooks/AuthContext'\nimport { Nav } from 'react-bootstrap'\n\nexport default function UserNavs() {\n    const auth = useAuth()\n\n    if (auth.user) {\n        return (\n            < >\n            <Nav.Link href=\"/courseplanner\">Course Planner</Nav.Link>\n            <Nav.Link href=\"/posts\">Posts</Nav.Link>\n            </>\n        )\n    }\n    else {\n        return (< ></>)\n    }\n}\n","import React from 'react'\nimport { Container, Navbar, Nav } from 'react-bootstrap'\nimport { useLocation } from 'react-router'\nimport AdminNavs from './AdminNavs'\nimport LoginUtil from './LoginUtil'\nimport UserNavs from './UserNavs'\n\nexport default function MyNav() {\n    const location = useLocation()\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n            <Container fluid>\n                <Navbar.Brand className=\"mx-3\" href=\"/\">Student Dash</Navbar.Brand>\n                <Nav activeKey={location.pathname} className=\"me-auto\">\n                    <UserNavs />\n                    <AdminNavs />\n                </Nav>\n                <LoginUtil className=\"justify-content-end\"/>\n            </Container>\n        </Navbar>\n    )\n}\n","import React from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport './styles.css'\n\nexport default function Poster() {\n    return (\n        <Container fluid className=\"p-0 overflow-hidden text-center h-100\">\n            <img className=\"poster-img\" src=\"https://images.unsplash.com/photo-1519389950473-47ba0277781c?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2070&q=80\" alt=\"bg\" />\n            <div className=\"poster-text position-absolute top-50 start-50 translate-middle d-block\">\n                <Container fluid className=\"h-100\">\n                    <Row className=\"align-items-center h-100 justify-content-center\">\n                        <Col lg='3' md='5' sm=\"7\" xs=\"9\" className=\"align-self-center bg-overlay rounded p-0\">\n                            <div className=\"my-4 text-white\">\n                                <h1>Hey There!</h1>\n                                <p>Welcome to Student Dash</p>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </Container>\n    )\n}\n","import { createContext, useContext, useState } from 'react'\nimport axios from 'axios'\n\nexport const server = axios.create({\n    baseURL: process.env.REACT_APP_SERVER_URL + '/courseplanner',\n    withCredentials: true\n});\n\n\n\nconst CPContext = createContext();\n\nexport function CPProvider({ children }) {\n    const CP = useProvideCP();\n\n    return (\n        <CPContext.Provider value={CP}>\n            {children}\n        </CPContext.Provider>\n    )\n}\n\nexport function useCP() {\n    return useContext(CPContext)\n}\n\n// check if clashes is present already.\nfunction ispresent(clashes, id1, id2) {\n    for (let i = 0; i < clashes.length; i++) {\n        if ((clashes[i][0] === id1 && clashes[i][1] === id2) || (clashes[i][0] === id2 && clashes[i][1] === id1)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction useProvideCP() {\n    // const [courseList, setCourseList] = useState([]);\n    // const [error, setError] = useState(null);\n    // const [isLoading, setIsLoading] = useState(false);\n\n    // const loadCourseList = async () => {\n    //     setIsLoading(true);\n    //     try {\n    //         const response = await server.get('/');\n    //         setCourseList(response.data);\n    //     } catch (error) {\n    //         setError(error.message);\n    //     }\n    //     setIsLoading(false);\n    // };\n\n    const [courses, setCourses] = useState()\n    const [schedules, setSchedules] = useState([])\n    const [calendars, setCalendars] = useState([])\n    const [clashes, setClashes] = useState([])\n    const [selectedCourses, setSelectedCourses] = useState([])\n    const [totalCredits, setTotalCredits] = useState(0)\n    const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n\n    function getClashes() {\n        let clashes_local = []\n        for (let i = 0; i < 7; i++) {\n            // get schedule for day = i\n            let schedules_copy = schedules\n            let daySchedule = schedules_copy.filter(schedule => schedule.rawDay === i);\n            // Set clashes for day = i if there are any clashes with start time and end time\n            for (let j = 0; j < daySchedule.length; j++) {\n                const cls1 = daySchedule[j];\n                for (let k = 0; k < daySchedule.length; k++) {\n                    const cls2 = daySchedule[k];\n                    // if there is a start time inside a class.\n                    if (j !== k) {\n                        if ((cls1.rawStart <= cls2.rawStart) && (cls2.rawStart < cls1.rawEnd)) {\n                            // push to clashes if not already in clashes\n                            if (!ispresent(clashes_local, cls1.title, cls2.title, days[i])) {\n                                clashes_local.push([cls1.title, cls2.title, days[i]]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        setClashes(clashes_local);\n    }\n\n    function deselectCourse(id) {\n        let local = selectedCourses\n        local = local.filter(course => course.id !== id)\n        setSelectedCourses([...local])\n    }\n\n\n    return { courses, setCourses, schedules, setSchedules, calendars, setCalendars, clashes, getClashes, selectedCourses, setSelectedCourses, deselectCourse, totalCredits, setTotalCredits }\n}\n\n\n\n","import Calendar from '@toast-ui/react-calendar';\nimport 'tui-calendar/dist/tui-calendar.css';\nimport { useRef, useEffect } from 'react';\nimport { useCP } from '../../hooks/CPContext';\n\n// make page that has tui calendar in the left and a list of courses in the right\n// when you click on a course, it should show course in calendar\n\nvar templates = {\n\t\tweekDayname: function(model) {\n\t\t\t\treturn '<span class=\"fs-4\">' + model.dayName + '</span>';\n\t\t}\n\t}\n\nfunction Timetable(props) {\n\tconst calendar = useRef()\n\tconst CP = useCP()\n\t\n\n\t// Move to next week on each render of calendar\n\tuseEffect(() => {\n\t\tconst calInstance = calendar.current.getInstance()\n\t\tcalInstance.next()\n\t}, [])\n\n\t// function next() {\n\t// \tconst calInstance = calendar.current.getInstance()\n\t// \tcalInstance.next()\n\t// }\n\t// function back() {\n\t// \tconst calInstance = calendar.current.getInstance()\n\t// \tcalInstance.prev()\n\t// }\n\n\treturn (\n\t\t< >\n\t\t{/* <Button onClick={()=>{back()}}>back</Button>\n\t\t<Button onClick={()=>{next()}}>next</Button> */}\n\t\t<Calendar ref={calendar} schedules={CP.schedules} calendars={CP.calendar} height=\"718px\" taskView={false} isReadOnly={true} scheduleView={['time']} template={templates} week={{hourStart:7, hourEnd:20}} />\n\t\t</>\n\t);\n}\n\nexport default Timetable;","import { useState, useEffect, useRef} from 'react';\nimport { useCP, server } from '../../../hooks/CPContext';\nimport { CloseButton, Collapse } from 'react-bootstrap';\nconst randomColor = require('randomcolor');\n\n// Component: CourseList\n// Description:\n// \t\tA component that displays a list of courses\n// \t\tand allows the user to select them.\n// \t\tThe list is filtered by the user's search term.\n\nfunction CourseItem({ course, id, disabled }) {\n    const inputRef = useRef()\n    const CP = useCP()\n    const [showInfo, setShowInfo] = useState(false)\n    const [courseInfo, setCourseInfo] = useState({})\n\n    useEffect(() => {\n        server.get('/'+id)\n            .then((res) => {\n                setCourseInfo(res.data)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    function getNearestDate(day, time) {\n        const today = new Date();\n        const dayOfWeek = today.getDay();\n        const diff = day - dayOfWeek;\n        if (diff >= 0) {\n            return new Date(today.getFullYear(), today.getMonth(), today.getDate() + diff + 7, (time-(time%100))/100, time%100);\n        } else if (diff < 0) {\n            return new Date(today.getFullYear(), today.getMonth(), today.getDate() + diff + 7, (time-(time%100))/100, time%100);\n        }\n    }\n\n    function addCourse() {\n        // Add new calendar for the course\n        var color = randomColor({ luminosity: 'dark', seed: id })\n        const newCalendar = {\n            id: String(id),\n            name: course,\n            bgColor: color,\n            borderColor: color\n        }\n        let calendars = CP.calendars\n        calendars.push(newCalendar)\n        CP.setCalendars([...calendars])\n        // Add each class to schedule\n        courseInfo.course_timetable.map(myClass => {\n            const newClass = {\n                id: String(CP.schedules.length+1),\n                calendarId: String(id),\n                title: course,\n                category: 'time',\n                dueDateClass: '',\n                start: getNearestDate(myClass.day, myClass.start_time).toISOString(),\n                end: getNearestDate(myClass.day, myClass.end_time).toISOString(),\n                bgColor: color,\n                borderColor: color,\n                color: '#ffffff',\n                rawStart: parseInt(myClass.start_time),\n                rawEnd: parseInt(myClass.end_time),\n                rawDay: parseInt(myClass.day),\n                rawId: id\n            }\n            let schedules = CP.schedules\n            schedules.push(newClass)\n            CP.setSchedules([...schedules])\n            CP.setTotalCredits(CP.totalCredits+courseInfo.course_credit)\n        })\n    }\n\n    function removeCourse() {\n        let calendars = CP.calendars\n        // remove item from array when id matches\n        calendars = calendars.filter(calendar => calendar.id !== id)\n        CP.setCalendars(calendars);\n        \n        // remove each class from schedule\n        let schedules = CP.schedules\n        schedules = schedules.filter(schedule => schedule.calendarId !== id);\n        // set new schedules and get clashes\n        CP.setSchedules(schedules);\n        CP.setTotalCredits(CP.totalCredits-courseInfo.course_credit)\n    }\n\n    function removeFromList() {\n        let calendars = CP.calendars\n        // remove item from array when id matches\n        const currCal = calendars.filter(calendar => calendar.id === id)\n        calendars = calendars.filter(calendar => calendar.id !== id)\n        CP.setCalendars(calendars);\n        // remove each class from schedule\n        let schedules = CP.schedules\n        schedules = schedules.filter(schedule => schedule.calendarId !== id);\n        // set new schedules and get clashes\n        CP.setSchedules(schedules);\n        if(currCal.length > 0) {\n            CP.setTotalCredits(CP.totalCredits-courseInfo.course_credit)\n        }\n    }\n\n    function handleSelect() {\n        const input = inputRef.current\n        if (input.checked) {\n            addCourse()\n        }\n        else {\n            removeCourse()\n        }\n    }\n\n    function handleRemove() {\n        removeFromList()\n        CP.deselectCourse(id)\n    }\n\n    return (\n        < >\n        <label className=\"list-group-item\" >\n            <input ref={inputRef} onChange={handleSelect} className=\"form-check-input me-2\" type=\"checkbox\" value=\"\" disabled={disabled} />\n            {course}\n            <a href=\"#\" onClick={() => setShowInfo(!showInfo)} className=\"link-primary mx-1\"><i className=\"bi bi-info-circle\"></i></a>\n            <CloseButton className=\"float-end\" onClick={handleRemove} />\n        </label>\n        <Collapse in={showInfo}>\n            <div className=\"list-group-item text-center\">\n                <table className=\"table table-striped my-1\">\n                    <tbody>\n                        <tr>\n                            <td>Credits:</td>\n                            <td>{courseInfo.course_credit}</td>\n                        </tr>\n                        <tr>\n                            <td>Mode:</td>\n                            <td>{courseInfo.course_venue}</td>\n                        </tr>\n                        <tr>\n                            <td>Instructor:</td>\n                            <td>{courseInfo.course_instructor}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </Collapse>\n        </>\n    );\n}\n\nexport default CourseItem;\n","import CourseItem from \"./CourseItem\";\nimport { useCP } from \"../../../hooks/CPContext\";\n\nfunction CourseList({ handleAdd }) {\n    const CP = useCP()\n    // function check() {\n    //     console.log(CP.schedules)\n    // }\n    \n    return (\n        <div className=\"list-group py-2\">\n            {/* <button onClick={() => check()}>check</button> */}\n            {CP.selectedCourses.map(course => (\n                <CourseItem key={course.id} id ={course.id} course={course.course_name} disabled={false} />\n            ))}\n            <div className=\"list-group-item text-center\">\n                <button onClick={handleAdd} type=\"button\" className=\"btn btn-primary\">Add <i className=\"bi bi-plus-lg\"></i></button>\n            </div>\n        </div>\n    )\n}\n\nexport default CourseList;\n","import { Col, Container, Row, Spinner } from \"react-bootstrap\";\nimport './styles.css'\n\nexport default function Loading() {\n    return (\n        <Container className='h-100 greyed' fluid>\n            <Row className='h-100 align-items-center justify-content-center'>\n                <Col className=\"text-center\">\n                    <Spinner animation=\"border\" />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n","import { useState, useEffect, useRef} from 'react';\nimport { useCP } from '../../../hooks/CPContext';\n\n// Component: CourseList\n// Description:\n// \t\tA component that displays a list of courses\n// \t\tand allows the user to select them.\n// \t\tThe list is filtered by the user's search term.\n\nexport default function SearchItem({ course, id, disabled }) {\n    const inputRef = useRef()\n    const CP = useCP()\n    const [selected, setSelected] = useState(false)\n    const [init, setInit] = useState(false)\n\n    useEffect(() => {\n        let selectedCourses = CP.selectedCourses\n        selectedCourses = selectedCourses.filter(course => course.id === id)\n        if (selectedCourses.length) {\n            setSelected(true)\n            setInit(true)\n        }\n        else {\n            setSelected(false)\n            setInit(false)\n        }\n    }, [])\n\n    function addCourse() {\n        let selectedCourses = CP.selectedCourses\n        selectedCourses.push(course)\n        CP.setSelectedCourses([...selectedCourses])\n        setSelected(true)\n    }\n\n    function removeCourse() {\n        CP.deselectCourse(id)\n        setSelected(false)\n    }\n\n    function handleSelect() {\n        const input = inputRef.current\n        if (input.checked) {\n            addCourse()\n        }\n        else {\n            removeCourse()\n        }\n    }\n\n    if (!init) {\n        return (\n            <label className=\"list-group-item\" >\n                <input ref={inputRef} onChange={handleSelect} className=\"form-check-input me-2\" type=\"checkbox\" value=\"\" disabled={disabled} checked={selected} />\n                {course.course_code}: {course.course_name}\n            </label>\n        )\n    }\n    else {\n        return (< ></>)\n    }\n}","import { useRef, useEffect } from \"react\";\nimport { useCP, server } from \"../../../hooks/CPContext\";\nimport SearchItem from \"./SearchItem\"\nimport { FloatingLabel, Form } from \"react-bootstrap\";\n\nfunction CourseList() {\n    const CP = useCP()\n    const searchRef = useRef()\n\n    useEffect(() => {\n        search()\n    }, [])\n\n    function search() {\n        if (searchRef.current.value === '') {\n            server.get(\"/\", { params: { page: 1 } })\n                .then((res) => {\n                    CP.setCourses(res.data.results)\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n        else {\n            server.get(\"/\", { params: { page: 1, course_name: searchRef.current.value } })\n                .then((res) => {\n                    console.log(res.data)\n                    CP.setCourses(res.data.results)\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n    }\n    \n    return (\n        < >\n        <FloatingLabel label=\"Search\" >\n            <Form.Control ref={searchRef} type=\"text\" onChange={search} />\n            <Form.Text className=\"text-muted\"> Search for a course by name or code. </Form.Text>\n        </FloatingLabel>\n        <div className=\"list-group py-2\">\n            {CP.courses.map(course => (\n                <SearchItem key={course.id} id ={course.id} course={course} disabled={false} />\n            ))}\n        </div>\n        </>\n    )\n}\n\nexport default CourseList;\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { useCP } from '../../../hooks/CPContext'\n\nexport default function Clashes() {\n    const CP = useCP()\n    return (\n        < >\n            { CP.clashes.map(clash => (\n                <Alert className='my-1' variant='danger'>\n                    {clash[0]} & {clash[1]} clash on {clash[2]}!\n                </Alert>\n            ))}\n        </>\n    )\n}\n","import Timetable from \"./Timetable\";\nimport CourseList from \"./CourseList/CourseList\";\nimport { Container, Row, Col, Collapse, Card, Modal, Badge } from 'react-bootstrap'\nimport 'bootstrap-icons/font/bootstrap-icons.css'\nimport { useState, useEffect } from \"react\";\nimport Loading from \"../Loading/Loading\"\nimport { server, useCP } from \"../../hooks/CPContext\"\nimport ListCourses from \"./AddCourse/ListCourses\"\nimport Clashes from \"./CourseList/Clashes\";\n\n//render the component by function\nexport default function Courseplanner() {\n    const CP = useCP()\n    const [showCoursesi, setShowCoursesi] = useState(false)\n    const [showCourseModal, setShowCourseModal] = useState(false)\n\n    useEffect(() => {\n        server.get(\"/\", { params: { page: 1 } })\n            .then((res) => {\n                CP.setCourses(res.data.results)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    useEffect(() => {\n        CP.getClashes()\n    }, [CP.schedules])\n\n    // dummy props\n    // const courses = [\n    //     {\n    //         id: 1,\n    //         course: \"React\",\n    //     },\n    //     {\n    //         id: 2,\n    //         course: \"Redux\",\n    //     },\n    //     {\n    //         id: 3,\n    //         course: \"Node\",\n    //     },\n    // ];\n\n    if (CP.courses) {\n        return (\n            < >\n            <Container className='mt-3' fluid>\n                <Row className='px-2'>\n                    <Clashes />\n                </Row>\n                <Row>\n                    <Col lg='8'>\n                        <Timetable />\n                    </Col>\n                    \n                    <Col lg='4' className='px-3'>\n                        {CP.totalCredits? (\n                            <Card className='my-2'>\n                                <Card.Body className='p-2 text-center'>Current Credits: <Badge className='mx-1' bg=\"dark\">{CP.totalCredits}</Badge></Card.Body>\n                            </Card>\n                        ):<></>}\n                        <h3>Courses <a href=\"#\" onClick={() => setShowCoursesi(!showCoursesi)} className=\"link-primary h5\"><i className=\"bi bi-info-circle\"></i></a></h3>\n                        <Collapse in={showCoursesi}>\n                            <Card>\n                                <Card.Body>\n                                    Add courses you wish to take to this list and see how your schedule work out!\n                                </Card.Body>\n                            </Card>\n                        </Collapse>\n                        <CourseList handleAdd={()=>setShowCourseModal(true)} />\n                        \n                    </Col>\n                </Row>\n            </Container>\n            <Modal show={showCourseModal} centered onHide={()=>setShowCourseModal(false)} >\n                <Modal.Header closeButton>\n                    <Modal.Title>Add a Course</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ListCourses />\n                </Modal.Body>\n            </Modal>\n            </>\n        );\n    }\n    else {\n        return (<Loading />)\n    }\n}\n\n","import { useAuth } from \"../../hooks/AuthContext\";\nimport { Route, Redirect } from \"react-router\";\nimport Loading from \"../Loading/Loading\";\n\nexport default function UserRoute({ children, ...rest }) {\n\tconst auth = useAuth()\n    if (auth.userSet) {\n        if (auth.user) {\n            return (<Route {...rest} render={() => (children)} />)\n        }\n        else {\n            return (<Route {...rest} render={({location}) => (<Redirect to={{pathname: \"login\", state: {from: location}}}/>)} />)\n        }\n    }\n    else {\n        return (\n            <Loading />\n        )\n    }\n}","import React from 'react'\nimport { Col, Container, Row, CloseButton } from 'react-bootstrap'\nconst days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n\nexport default function ListItem({myClass, classes, setClasses}) {\n\n    function handleRemove() {\n        var classeslocal = classes\n        classeslocal = classeslocal.filter(checkClass => checkClass !== myClass)\n        setClasses([...classeslocal])\n    }\n\n    return (\n        <label className=\"list-group-item\" >\n            <Container fluid>\n                <Row>\n                    <Col>On {days[myClass.day]}</Col>\n                    <Col>from {(myClass.start_time-myClass.start_time%100)/100}:{myClass.start_time%100? (myClass.start_time%100<10? \"0\"+myClass.start_time%100 : myClass.start_time%100) : \"00\"}</Col>\n                    <Col>to {(myClass.end_time-myClass.end_time%100)/100}:{myClass.end_time%100? (myClass.end_time%100<10? \"0\"+myClass.end_time%100 : myClass.end_time%100) : \"00\"}</Col>\n                    <CloseButton className=\"float-end\" onClick={handleRemove} />\n                </Row>\n            </Container>\n        </label>\n    )\n}\n","import ListItem from \"./ListItem\"\n\nexport default function ClassList({handleAdd, classes, setClasses}) {\n    return (\n        <>\n        <h3>Classes</h3>\n        <div className=\"list-group py-2\">\n            {classes.map(myClass => (\n                <ListItem myClass={myClass} classes={classes} setClasses={setClasses} />\n            ))}\n            <div className=\"list-group-item text-center\">\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleAdd} >Add New Class</button>\n            </div>\n        </div>\n        </>\n    )\n}","import React from 'react'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\nimport { Form, Button, FloatingLabel } from 'react-bootstrap'\n\nexport default function AddClassForm({classes, setClasses, setShowModal}) {\n\n    let schema = yup.object().shape({\n\t\tday: yup.number().required('Required!'),\n\t\tstart: yup.number().required('Required!'),\n        end: yup.number().required('Required!')\n\t})\n\n\tfunction handleAdd(values) {\n        const newClass = {\n            \"day\": String(values.day),\n            \"start_time\": String(values.start),\n            \"end_time\": String(values.end)\n        }\n        var classesLocal = classes\n        classesLocal.push(newClass)\n        setClasses([...classesLocal])\n        setShowModal(false)\n\t}\n\n    return (\n        <Formik validationSchema={schema} onSubmit={handleAdd} initialValues={{day: '', start: '', end: ''}}>\n            {({handleSubmit, handleChange, handleBlur, values, touched, isValid, errors, dirty}) => (\n                <Form className=\"mx-5 my-4\" noValidate onSubmit={handleSubmit}>\n                        \n                    <Form.Group className=\"mb-3\" controlId=\"formDay\">\n                        <FloatingLabel label=\"Day\">\n                            <Form.Select name=\"day\" value={values.day} onChange={handleChange} onBlur={handleBlur} >\n                                <option value=\"1\">Monday</option>\n                                <option value=\"2\">Tuesday</option>\n                                <option value=\"3\">Wednesday</option>\n                                <option value=\"4\">Thursday</option>\n                                <option value=\"5\">Friday</option>\n                                <option value=\"6\">Saturday</option>\n                                <option value=\"0\">Sunday</option>\n                            </Form.Select>\n                        </FloatingLabel>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formStart\">\n                        <FloatingLabel label=\"Start Time\">\n                            <Form.Control type=\"number\" name='start' value={values.start} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.start && errors.start} />\n                            <Form.Control.Feedback type=\"invalid\"> {errors.start} </Form.Control.Feedback>\n                        </FloatingLabel>\n                        <Form.Text className=\"text-muted\"> Enter time in 24 hour format HHMM </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formEnd\">\n                        <FloatingLabel label=\"Course End\">\n                            <Form.Control type=\"number\" name='end' value={values.end} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.end && errors.end} />\n                            <Form.Control.Feedback type=\"invalid\"> {errors.end} </Form.Control.Feedback>\n                        </FloatingLabel>\n                        <Form.Text className=\"text-muted\"> Enter time in 24 hour format HHMM </Form.Text>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\" disabled={!(isValid && dirty)}>\n                        Add\n                    </Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n","import React, { useState } from 'react';\nimport { Alert, Form, Button, Container, Row, Col, FloatingLabel, Modal } from 'react-bootstrap'\nimport * as yup from 'yup'\nimport { Formik } from 'formik';\nimport ClassList from './ClassList/ClassList';\nimport AddClassForm from './ClassList/AddClassForm';\nimport axios from 'axios';\n\nexport default function CourseManage() {\n    const [showModal, setShowModal] = useState(false)\n    const [classes, setClasses] = useState([])\n    const [success, setSuccess] = useState(false)\n    const [failure, setFailure] = useState(false)\n    const server = axios.create({\n        baseURL: process.env.REACT_APP_SERVER_URL + '/courseplanner',\n        withCredentials: true\n    });\n\n\tlet schema = yup.object().shape({\n\t\tname: yup.string().required('Required!'),\n\t\tcode: yup.string().required('Required!'),\n        credits: yup.number().positive('Must be a Positive Number!').required('Required!'),\n        instructor: yup.string().required('Required!')\n\t})\n\n\tfunction login(values, {resetForm}) {\n        const newCourse = {\n            course_name: values.name,\n            course_code: values.code,\n            course_credit: values.credits,\n            course_timetable: classes,\n            course_instructor: values.instructor\n        }\n\n        server.post(\"/\", newCourse)\n            .then((res) => {\n                setSuccess(true)\n                resetForm()\n                setClasses([])\n            })\n            .catch((err) => {\n                setFailure(true)\n            })\n\t}\n\n\treturn (\n        <>\n\t\t<Container>\n\t\t\t<Row className=\"justify-content-center my-4\">\n\t\t\t\t<Col lg=\"10\">\n                    <Alert variant=\"danger mx-5\" show={failure} onClose={() => setFailure(false)} dismissible>Something went wrong!</Alert>\n                    <Alert variant=\"success mx-5\" show={success} onClose={() => setSuccess(false)} dismissible>Course added successfully!</Alert>\n\t\t\t\t\t<h1 className=\"mx-5 my-4\">Add a New Course</h1>\n\t\t\t\t\t<Formik validationSchema={schema} onSubmit={login} initialValues={{name: '', code: '', credits: '', instructor: ''}}>\n\t\t\t\t\t\t{({handleSubmit, handleChange, handleBlur, values, touched, isValid, errors, dirty}) => (\n\t\t\t\t\t\t\t<Form className=\"mx-5 my-4\" noValidate onSubmit={handleSubmit}>\n\n                                <Form.Group className=\"mb-3\" controlId=\"formName\">\n                                    <FloatingLabel label=\"Course Name\">\n                                        <Form.Control type=\"text\" name='name' value={values.name} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.name && errors.name} />\n                                        <Form.Control.Feedback type=\"invalid\"> {errors.name} </Form.Control.Feedback>\n                                    </FloatingLabel>\n                                </Form.Group>\n                                    \n                                <Form.Group className=\"mb-3\" controlId=\"formCode\">\n                                    <FloatingLabel label=\"Course Code\">\n                                        <Form.Control type=\"text\" name='code' value={values.code} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.code && errors.code} />\n                                        <Form.Control.Feedback type=\"invalid\"> {errors.code} </Form.Control.Feedback>\n                                    </FloatingLabel>\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\" controlId=\"formCredits\">\n                                    <FloatingLabel label=\"Course Credits\">\n                                        <Form.Control type=\"number\" name='credits' value={values.credits} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.credits && errors.credits} />\n                                        <Form.Control.Feedback type=\"invalid\"> {errors.credits} </Form.Control.Feedback>\n                                    </FloatingLabel>\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\" controlId=\"formInstructor\">\n                                    <FloatingLabel label=\"Course Instructor\">\n                                        <Form.Control type=\"text\" name='instructor' value={values.instructor} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.instructor && errors.instructor} />\n                                        <Form.Control.Feedback type=\"invalid\"> {errors.instructor} </Form.Control.Feedback>\n                                    </FloatingLabel>\n                                </Form.Group>\n\n                                <ClassList handleAdd={()=>setShowModal(true)} classes={classes} setClasses={setClasses} />\n\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" disabled={!(isValid && dirty)}>\n\t\t\t\t\t\t\t\t\tAdd New Course\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n        <Modal size='lg' show={showModal} centered onHide={()=>setShowModal(false)} >\n            <Modal.Header closeButton>\n                <Modal.Title>Add a Class</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <AddClassForm classes={classes} setClasses={setClasses} setShowModal={setShowModal} />\n            </Modal.Body>\n        </Modal>\n        </>\n\t)\n}","import { Col, Container, Row, Alert } from \"react-bootstrap\";\n\nexport default function Loading() {\n    return (\n        <Container className='h-100' fluid>\n            <Row className='h-100 align-items-center justify-content-center'>\n                <Col sm='3' className=\"text-center\">\n                    <Alert variant=\"danger\">You do not have access to this page!</Alert>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n","import { useAuth } from \"../../hooks/AuthContext\";\nimport { Route, Redirect } from \"react-router\";\nimport Loading from \"../Loading/Loading\";\nimport NoAccess from \"../NoAccess\"\n\nexport default function AdminRoute({ children, ...rest }) {\n\tconst auth = useAuth()\n    \n    if (auth.userSet) {\n        if (auth.user) {\n            if (auth.user.role === 1 || auth.user.role === 2) {\n                return (<Route {...rest} render={() => (children)} />)\n            }\n            else {\n                return (<NoAccess />)\n            }\n        }\n        else {\n            return (<Route {...rest} render={({location}) => (<Redirect to={{pathname: \"/login\", state: {from: location}}}/>)} />)\n        }\n    }\n    else {\n        return (\n            <Loading />\n        )\n    }\n}","import React from 'react'\nimport { Card, Col, ListGroup, Row, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useAuth } from '../../hooks/AuthContext'\n\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\nconst server = axios.create({\n    baseURL: process.env.REACT_APP_SERVER_URL + '/post',\n    withCredentials: true\n})\n\nexport default function Post({post, update, setUpdate}) {\n    var date = new Date(post.createdAt)\n    const auth = useAuth()\n\n    function to12hour(hours, mins) {\n        if (hours > 12) {\n            if (mins === 0) {\n                return (hours%12)+\":00 pm\"\n            }\n            else if (mins<10) {\n                return (hours%12)+\":0\"+mins+\" pm\" \n            }\n            return (hours%12)+\":\"+mins+\" pm\"\n        }\n        else {\n            return hours+\":\"+mins+\" am\"\n        }\n    }\n\n    function timeStamp() {\n        const today = new Date()\n        if (today.getYear() === date.getYear()) {\n            if (today.getMonth() === date.getMonth()) {\n                if (today.getDay() === date.getDay()) {\n                    return to12hour(date.getHours(),date.getMinutes())\n                }\n                else {\n                    return days[date.getDay()]\n                }\n            }\n            else {\n                return months[date.getMonth()]\n            }\n        }\n        else {\n            return date.getFullYear()\n        }\n    }\n\n    function deletePost() {\n        server.delete('/'+post.id)\n            .then((res) => {\n                setUpdate(!update)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    return (\n        <Card className=\"my-3\">\n            <Card.Header>\n                <Row>\n                    <Col><strong>{post.author}</strong></Col>\n                    <Col><div className=\"text-end\">{timeStamp()}</div></Col>\n                </Row>\n            </Card.Header>\n            <Card.Body>\n                {post.content}\n            </Card.Body>\n            {(auth.user.role === 1 || auth.user.role === 2 || auth.user._id === post.authorId)? (\n                <ListGroup><div className=\"text-end px-3 py-1\"><Button onClick={deletePost} variant=\"outline-danger\"><i className=\"bi bi-trash-fill\"></i></Button></div></ListGroup>\n            ):(\n                <></>\n            )}\n            \n        </Card> \n    )\n}\n","import React from 'react'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\nimport { Form, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useAuth } from '../../hooks/AuthContext'\n\nconst server = axios.create({\n    baseURL: process.env.REACT_APP_SERVER_URL + '/post',\n    withCredentials: true\n})\n\nexport default function PostForm({setShowModal, update, setUpdate}) {\n    const auth = useAuth()\n\n    let schema = yup.object().shape({\n\t\tcontent: yup.string().required('Required!')\n\t})\n\n\tfunction handleCreate(values) {\n        const newPost = {\n            content: values.content,\n            author: auth.user.username\n        }\n        server.post('/', newPost)\n            .then((res) => {\n                setShowModal(false)\n                setUpdate(!update)\n            })\n\t}\n\n    return (\n        <Formik validationSchema={schema} onSubmit={handleCreate} initialValues={{content: \"\"}}>\n            {({handleSubmit, handleChange, handleBlur, values, touched, isValid, errors, dirty}) => (\n                <Form className=\"mx-5 my-4\" noValidate onSubmit={handleSubmit}>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formContent\">\n                        <Form.Control as=\"textarea\" rows=\"10\" name='content' value={values.content} onChange={handleChange} onBlur={handleBlur} isInvalid={touched.content && errors.content} />\n                        <Form.Control.Feedback type=\"invalid\"> {errors.content} </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\" disabled={!(isValid && dirty)}>\n                        Create\n                    </Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n","import React, { useState, useEffect} from 'react'\nimport { Alert, Col, Container, Row, Button, Modal, Pagination } from 'react-bootstrap'\nimport axios from 'axios'\nimport Post from './Post'\nimport Loading from '../Loading/Loading'\nimport PostForm from './PostForm'\n\nconst server = axios.create({\n    baseURL: process.env.REACT_APP_SERVER_URL + '/post',\n    withCredentials: true\n})\n\nexport default function Posts() {\n    const [posts, setPosts] = useState([])\n    const [loaded, setLoaded] = useState(false)\n    const [showModal, setShowModal] = useState(false)\n    const [update, setUpdate] = useState(false)\n    const [items, setItems] = useState([])\n    const [pages, setPages] = useState(1)\n    const [page, setPage] = useState(1)\n\n    useEffect(() => {\n        server.get(\"/\", { params: { page: page } })\n            .then((res) => {\n                setPosts(res.data.results)\n                setLoaded(true)\n                setPage(res.data.page)\n                setPages(res.data.totalPages)\n            })\n            .catch((err) => {\n                console.log(err)\n                setLoaded(true)\n            })\n    }, [update, page])\n\n    useEffect(() => {\n        let items = [];\n        for (let number = 1; number <= pages; number++) {\n            items.push(\n                <Pagination.Item key={number} active={number === page} onClick={()=>setPage(number)}>\n                {number}\n                </Pagination.Item>,\n            );\n        }\n        setItems(items)\n    }, [page, pages])\n\n    if (loaded) {\n        return (\n            <>\n            <Container className=\"my-4\">\n                <Row className=\"justify-content-center\">\n                    <Col lg={6}>\n                        <Row className=\"justify-content-end\">\n                            <Col><h3>Recent Posts</h3></Col>\n                            <Col className=\"text-end\">\n                                <Button variant=\"primary\" onClick={()=>setShowModal(true)} >Create Post</Button>\n                            </Col>\n                        </Row>\n                        {posts.length? posts.map((post) => (\n                            <Post key={post.id} post={post} update={update} setUpdate={setUpdate} />\n                        )) : (\n                            <Alert variant=\"info\" className=\"text-center\">No posts here!</Alert>\n                        )}\n                        <Pagination>{items}</Pagination>\n                    </Col>\n                </Row>\n            </Container>\n            <Modal size='lg' show={showModal} centered onHide={()=>setShowModal(false)} >\n                <Modal.Header closeButton>\n                    <Modal.Title>Create Post</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <PostForm setShowModal={setShowModal} update={update} setUpdate={setUpdate} />\n                </Modal.Body>\n            </Modal>\n            </>\n        )\n    }\n    return (<Loading />)\n}\n","import { Switch, Route } from \"react-router-dom\";\nimport Login from '../Login';\nimport Signup from \"../Signup\";\nimport MyNav from \"../Navbar/MyNav\";\nimport Poster from \"../Poster/Poster\";\nimport Courseplanner from \"../CoursePlanner/Courseplanner\";\nimport UserRoute from \"./UserRoute\";\nimport { CPProvider } from \"../../hooks/CPContext\";\nimport CourseAdd from \"../CourseAdd/CourseAdd\"\nimport AdminRoute from \"./AdminRoute\"\nimport Posts from \"../Posts/Posts\";\n\n\nexport default function App() {\n\treturn (\n\t\t<>\n\t\t\t<MyNav/>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/signup\">\n\t\t\t\t\t<Signup />\n\t\t\t\t</Route>\n\t\t\t\t<UserRoute path=\"/courseplanner\">\n\t\t\t\t\t<CPProvider>\n\t\t\t\t\t\t<Courseplanner />\n\t\t\t\t\t</CPProvider>\n\t\t\t\t</UserRoute>\n\t\t\t\t<UserRoute path=\"/posts\">\n\t\t\t\t\t<Posts />\n\t\t\t\t</UserRoute>\n\t\t\t\t<AdminRoute path=\"/admin/addcourse\">\n\t\t\t\t\t<CourseAdd />\n\t\t\t\t</AdminRoute>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Poster />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</>\n\t);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { AuthProvider } from './hooks/AuthContext'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<AuthProvider>\n\t\t\t\t<App />\n\t\t\t</AuthProvider>\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}